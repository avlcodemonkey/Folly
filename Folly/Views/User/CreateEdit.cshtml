@using Folly.Resources
@using Folly.Models
@using Folly.Services
@model User
@inject IViewService ViewService

<content>
    <breadcrumb>
        <breadcrumb-item label="@Users.ViewAll" controller="User" action="Index" />
        <breadcrumb-item label="@(Model.IsCreate ? Users.CreateUser : Users.EditUser)" controller="User" action="@Model.FormAction"
            route-values="@(Model.IsCreate ? null : new { Id = Model.Id })" is-active="true"
        />
    </breadcrumb>

    @if (Model.IsCreate) {
        <partial name="_AlpineAlert" model="new AlpineAlert { Content = @Users.ExplainCreate }" />
    }

    <partial name="_Alert" />

    <horizontal-form for="Model">
        <input asp-for="Id" type="hidden" />

        <form-group-input for="FirstName" autofocus="true" />
        <form-group-input for="LastName" />
        <form-group-input for="UserName" />
        <form-group-input for="Email" />
        <form-group-select for="LanguageId" options="@(await ViewService.GetLanguageList())" />

        <div class="mb-1">
            <form-label for="RoleIds" />
            @{
                var roles = await ViewService.GetAllRoles();
                foreach (var role in roles)
                {
                    <form-checkbox name="RoleIds" value="@role.Id" label="@role.Name" is-checked="@Model.RoleIds?.Contains(role.Id) == true" />
                }
            }
        </div>

        <input class="button primary" type="submit" value="@Core.Save">
    </horizontal-form>
</content>
