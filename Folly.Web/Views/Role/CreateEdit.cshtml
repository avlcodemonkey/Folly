@using Folly.Models
@using Folly.Resources;
@using Folly.Services
@model Role
@inject IViewService ViewService

<content>
    <breadcrumb>
        <breadcrumb-item label="@Roles.ViewAll" controller="Role" action="Index" />
        <breadcrumb-item label="@(Model.IsCreate ? Roles.CreateRole : Roles.EditRole)" controller="Role" action="@Model.FormAction"
            route-values="@(Model.IsCreate ? null : new { Id = Model.Id })" active="true"
        />
    </breadcrumb>

    <partial name="_Alert" />

    <form-content for="Model">
        <input asp-for="Id" type="hidden" />

        <input-group for="Name" autofocus />
        <checkbox-group for="IsDefault" />

        <div class="mb-1">
            <label>@Roles.Permissions</label>
            @{
                var permissions = await ViewService.GetControllerPermissionsAsync();
                foreach (var controller in permissions.Keys)
                {
                    <details open>
                        <summary>@controller</summary>
                        @foreach (var permission in permissions[controller])
                        {
                            <form-checkbox name="PermissionIds" value="@permission.Id" label="@permission.ActionName" checked="@Model.PermissionIds?.Contains(permission.Id) == true" />
                        }
                    </details>
                }
            }
        </div>

        <input class="button primary" type="submit" value="@Core.Save">
    </form-content>
</content>
